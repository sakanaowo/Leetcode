class Solution {
public:
    vector<vector<int> > generateMatrix(int n) {
        if (n == 1) return {{1}};
        if (n == 2) return {{1, 2}, {4, 3}};
        if (n == 3) return {{1, 2, 3}, {8, 9, 4}, {7, 6, 5}};
        vector<vector<int> > v(n, vector<int>(n, 0));
        int l = 0, r = n - 1, u = 0, d = n - 1;
        int c = 1;
        while (l <= r && u <= d) {
            for (int i = l; i <= r; i++) v[u][i] = c++;
            u++;
            for (int i = u; i <= d; i++) v[i][r] = c++;
            r--;
            if (u <= d) {
                for (int i = r; i >= l; i--) v[d][i] = c++;
                d--;
            }
            if (l <= r) {
                for (int i = d; i >= u; i--)v[i][l] = c++;
                l++;
            }
        }
        return v;
    }
};
