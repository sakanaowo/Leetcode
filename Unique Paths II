class Solution:
    def uniquePathsWithObstacles(self, grid: List[List[int]]) -> int:
        n, m = len(grid), len(grid[0])

        path = [[0] * m for _ in range(n)]
        if grid[0][0] == 1:
            path[0][0] = 0
        else:
            path[0][0] = 1

        for i in range(1, m):
            if grid[0][i] == 1:
                path[0][i] = 0
            else:
                path[0][i] = path[0][i - 1]

        for i in range(1, n):
            if grid[i][0] == 1:
                path[i][0] = 0
            else:
                path[i][0] = path[i - 1][0]

        for i in range(1, n):
            for j in range(1, m):
                if grid[i][j] == 1:
                    path[i][j] = 0
                else:
                    path[i][j] = path[i][j - 1] + path[i - 1][j]

        return path[n - 1][m - 1]
