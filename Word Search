class Solution:
    def exist(self, board: List[List[str]], word: str) -> bool:
        row, col = len(board), len(board[0])
        dx = [(-1, 0), (0, -1), (1, 0), (0, 1)]

        def floodfill(index, r, c):
            if index == len(word) - 1: return True
            for x, y in dx:
                nx, ny = r + x, c + y
                if 0 <= nx < row and 0 <= ny < col and (nx, ny) not in visited:
                    if board[nx][ny] == word[index + 1]:
                        visited.add((nx, ny))
                        if floodfill(index + 1, nx, ny): return True
                        visited.remove((nx, ny))
            return False

        for i in range(row):
            for j in range(col):
                if board[i][j] == word[0]:
                    visited = set()
                    visited.add((i, j))
                    if floodfill(0, i, j): return True
        return False

